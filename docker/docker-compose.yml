version: "3"
services:
  paymentservice:
    image: emarketshop/payment-service:${PROJECT_VERSION}
    container_name: paymentservice
    ports:
      - 8400:8400
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - PROJECT_VERSION=0.0.2
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:9296
      - EUREKA_HOSTNAME=servicediscovery
      - EUREKA_URI=http://servicediscovery:8500/eureka/
    networks:
      - backend
    depends_on:
      configserver:
          condition: service_started
  userservice:
    image: emarketshop/user-service:${PROJECT_VERSION}
    container_name: userservice
    ports:
      - 8700:8700
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - PROJECT_VERSION=0.0.2
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:9296
      - EUREKA_HOSTNAME=servicediscovery
      - EUREKA_URI=http://servicediscovery:8500/eureka/
    networks:
      - backend
    depends_on:
      configserver:
          condition: service_started
  shippingservice:
    image: emarketshop/shipping-service:${PROJECT_VERSION}
    container_name: shippingservice
    ports:
      - 8600:8600
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - PROJECT_VERSION=0.0.2
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:9296
      - EUREKA_HOSTNAME=servicediscovery
      - EUREKA_URI=http://servicediscovery:8500/eureka/
    networks:
      - backend
    depends_on:
      configserver:
          condition: service_started
  productservice:
    image: emarketshop/product-service:${PROJECT_VERSION}
    container_name: productservice
    ports:
      - 8500:8500
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - PROJECT_VERSION=0.0.2
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:9296
      - EUREKA_HOSTNAME=servicediscovery
      - EUREKA_URI=http://servicediscovery:8500/eureka/
      - LOGSTASH_URI=logstash:5000
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411
    networks:
      - backend
    depends_on:
      configserver:
          condition: service_started
  orderservice:
    image: emarketshop/order-service:${PROJECT_VERSION}
    container_name: orderservice
    ports:
      - 8300:8300
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - PROJECT_VERSION=0.0.2
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:9296
      - EUREKA_HOSTNAME=servicediscovery
      - EUREKA_URI=http://servicediscovery:8500/eureka/
    networks:
      - backend
    depends_on:
      configserver:
          condition: service_started
  favouriteservice:
    image: emarketshop/favourite-service:${PROJECT_VERSION}
    container_name: favouriteservice
    ports:
      - 8800:8800
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:9296
      - PROJECT_VERSION=0.0.2
      - EUREKA_HOSTNAME=servicediscovery
      - EUREKA_URI=http://servicediscovery:8500/eureka/
    networks:
      - backend
    depends_on:
      configserver:
          condition: service_started
  configserver:
    image: emarketshop/cloud-config:${PROJECT_VERSION}
    container_name: configserver
    ports:
      - 9296:9296
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - PROJECT_VERSION=0.0.2
      - ENCRYPT_KEY=${SPRING_CLOUD_CONFIG_KEY}
      - EUREKA_HOSTNAME=servicediscovery
      - EUREKA_URI=http://servicediscovery:8500/eureka/
    networks:
      - backend
  servicediscovery:
    image: emarketshop/service-discovery:${PROJECT_VERSION}
    container_name: servicediscovery
    ports:
      - 8761:8761
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:9296
      - PROJECT_VERSION=0.0.2
      - EUREKA_HOSTNAME=servicediscovery
      - EUREKA_URI=http://servicediscovery:8500/eureka/
    networks:
      - backend
    depends_on:
      configserver:
          condition: service_started
  apigateway:
    image: emarketshop/api-gateway:${PROJECT_VERSION}
    container_name: apigateway
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:9296
      - PROJECT_VERSION=0.0.2
      - EUREKA_HOSTNAME=servicediscovery
      - EUREKA_URI=http://servicediscovery:8500/eureka/
    networks:
      - backend
    depends_on:
      configserver:
          condition: service_started
    CONFIGSERVER_URI: "http://configserver:8071"
    CONFIGSERVER_PORT: "8071"
    DATABASESERVER_PORT: "5432"
    ENCRYPT_KEY: "IMSYMMETRIC"
  depends_on:
    database:
      condition: service_healthy
    configserver:
      condition: service_started
    authenticationservice:
      condition: service_started
    kafkaserver:
      condition: service_started
  licensingservice:
    image: ostock/licensing-service:chapter12
    container_name: licensing-service
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      authenticationservice:
        condition: service_started
      kafkaserver:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend
  organizationservice:
    image: ostock/organization-service:chapter12
    container_name: organization-service
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      backend:
        aliases:
          - "elasticsearch"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - 5601:5601
    networks:
      backend:
        aliases:
          - "kibana"
  logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./config/conf.d:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    networks:
      backend:
        aliases:
          - "logstash"
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    depends_on:
      - elasticsearch
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9300"
    ports:
      - "9411:9411"
    networks:
      backend:
        aliases:
          - "zipkin"
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
    - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    container_name: prometheus
    networks:
      backend:
        aliases:
          - "prometheus"
  grafana:
    image: "grafana/grafana:latest"
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    container_name: grafana
    networks:
      backend:
        aliases:
          - "grafana"

volumes:
  esdata1:
    driver: local
networks:
  backend:
    driver: bridge
